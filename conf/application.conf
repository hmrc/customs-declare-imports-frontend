# Copyright 2019 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName="customs-declare-imports-frontend"
play.http.router=testOnlyDoNotUseInAppConf.Routes

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.FrontendFilters"

# Custom error handler
play.http.errorHandler = "config.ErrorHandler"

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' 'unsafe-eval' localhost:9000 localhost:9032 www.google-analytics.com www.googletagmanager.com data:"
play.filters.csrf.contentType.whiteList = ["application/xml", "application/json"]

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Not set here so that MDTP frontends share the same secret key in the local environment
# (see common.conf in frontend-bootstrap).
# In server environments the secret comes from app-config-common
# play.crypto.secret="XM2VF2wV1vxgIPksMkhVUpJvmnZuoXVCO5JLQsss7xw68mM5CLGDvdDUuPsUkDdK"

// this is just a placeholder configuration for tests and running locally
// at runtime, the real value is provided via environment configuration
// for the sake of simplicity and compatibility, we simply re-use the same encryption key used elsewhere
json.encryption.key = ${sso.encryption.key}

microservice {
    metrics {
        graphite {
            host = localhost
            port = 2003
            prefix = play.${appName}.
            enabled = true
        }
    }

    services {
      cachable {
        session-cache {
          domain = keystore
        }
      }

      keystore {
        host = localhost
        port = 8400
      }

      auth {
        host = localhost
        port = 8500
      }

      customs-declare-imports-frontend {
        features {
          default = disabled
        }
      }

      customs-declarations {
        host = localhost
        port = 6790
        submit-uri = "/"
        cancel-uri = "/cancellation-requests"
        api-version = "2.0"
      }

      customs-declare-imports {
        host = localhost
        port = 6794
        submit-uri = "/declaration"
      }
    }
}

metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = false
}

auditing {
  enabled=false
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token=N/A
  host=auto
}

assets {
  version = "3.3.2"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend {
  host = "http://localhost:9250"
}

mongodb {
  uri = "mongodb://localhost:27017/customs-declare-imports-frontend"
}
